//===---------------- InternalSoftBoundConfig.cpp - TODO ------------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
///
/// TODO
///
//===----------------------------------------------------------------------===//

#include "meminstrument/instrumentation_mechanisms/softbound/InternalSoftBoundConfig.h"

using namespace meminstrument;
using namespace softbound;

//===----------------------------------------------------------------------===//
//                 Implementation of InternalSoftBoundConfig
//===----------------------------------------------------------------------===//

bool InternalSoftBoundConfig::ensureSpatial() {
  return level == SPATIAL_ONLY || level == FULL_SAFETY;
}

bool InternalSoftBoundConfig::ensureOnlySpatial() {
  return level == SPATIAL_ONLY;
}

bool InternalSoftBoundConfig::ensureTemporal() {
  return level == TEMPORAL_ONLY || level == FULL_SAFETY;
}

bool InternalSoftBoundConfig::ensureOnlyTemporal() {
  return level == TEMPORAL_ONLY;
}

bool InternalSoftBoundConfig::ensureFullSafety() {
  return level == FULL_SAFETY;
}

//===-------------------------- private -----------------------------------===//

const SafetyLevel InternalSoftBoundConfig::level =
    InternalSoftBoundConfig::initialize();

auto constexpr InternalSoftBoundConfig::initialize() -> SafetyLevel {
  // TODO use autogenerated header file
  return SafetyLevel::SPATIAL_ONLY;
}